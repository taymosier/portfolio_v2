{"version":3,"sources":["data/canoe.png","helpers.js","Components/ChangeViewBlock.jsx","Views/DefaultView.jsx","Views/AboutMe/ProfileImage.jsx","Views/AboutMe/Navigation/SectionOption.jsx","Views/AboutMe/Navigation/SectionSelector.jsx","Views/AboutMe/Content/ContentTab.jsx","Views/AboutMe/Content/ContentNav.jsx","Views/AboutMe/Content/ContentPane.jsx","Views/AboutMe/Content/TabbedContent.jsx","Views/AboutMe/Content/TabbedContentContainer.jsx","Views/AboutMe/AboutMe.jsx","Views/AboutMe/Mobile/Navigation/MobileSectionOption.jsx","Views/AboutMe/Mobile/Navigation/MobileSectionSelector.jsx","Views/AboutMe/Mobile/Content/AboutMeModalNav.jsx","Views/AboutMe/Mobile/Content/AboutMeModal.jsx","Views/AboutMe/Mobile/MobileAboutMe.jsx","Views/Skillset/Grid/SkillCard.jsx","Views/Skillset/Grid/SkillButton.jsx","Views/Skillset/Grid/SkillRow.jsx","Views/Skillset/Grid/ToggleSkillsButton.jsx","Views/Skillset/Grid/SkillGrid.jsx","Views/Skillset/SkillView.jsx","Views/Skillset/Mobile/Grid/MobileSkillModal.jsx","Views/Skillset/Mobile/Grid/MobileSkillButton.jsx","Views/Skillset/Mobile/Grid/MobileSkillRow.jsx","Views/Skillset/Mobile/Grid/MobileSkillGrid.jsx","Views/Skillset/Mobile/MobileSkillView.jsx","Views/Portfolio/Grid/GridButton.jsx","Views/Portfolio/Grid/GridRow.jsx","Views/Portfolio/Grid/ProjectCard.jsx","Views/Portfolio/Grid/ToggleProjectButton.jsx","Views/Portfolio/Grid/ProjectsGrid.jsx","Views/Portfolio/Portfolio.jsx","Views/Portfolio/Mobile/Grid/MobileGridButton.jsx","Views/Portfolio/Mobile/Grid/MobileGridRow.jsx","Views/Portfolio/Mobile/Grid/MobileProjectsGrid.jsx","Views/Portfolio/Mobile/Grid/MobileProjectModal.jsx","Views/Portfolio/Mobile/MobilePortfolio.jsx","Views/Contact/ContactContent.jsx","Views/Contact/ContactFormGroup.jsx","Views/Contact/ContactModal.jsx","Views/Contact/ContactView.jsx","Portal.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","r","__webpack_exports__","d","determineScreenSize","capitalizeEveryWord","capitalize","detectOrientationChange","jquery__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_0___default","n","width","screenWidth","$","window","outerWidth","text","undefined","textArray","split","item","join","word","strArray","toUpperCase","console","log","currentOrientationState","newOrientationState","screenHeight","innerHeight","innerWidth","ChangeViewBlock","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","setState","view","setActiveView","_this2","react_default","a","createElement","Row","className","Col","xl","size","offset","lg","md","sm","xs","Button","onClick","Component","DefaultView","buttons","items","push","ChangeViewBlock_ChangeViewBlock","Container","ProfileImage","style","backgroundSize","backgroundImage","concat","require","SectionOption","updateActiveSection","index","option","SectionSelector","sections","keys","optionButtons","buttonHeight","length","SectionOption_SectionOption","minHeight","maxHeight","ContentTab","updateActiveChildTab","NavItem","NavLink","ContentNav","activeChild","tabItems","tabs","generateTabs","subsections","ContentTab_ContentTab","Navbar","Nav","ContentPane","columnSize","content","header","body","TabPane","tabId","TabbedContent","panes","generateContentPanes","contentPanes","contentKeys","ContentPane_ContentPane","TabbedContentContainer","bind","assertThisInitialized","activeSectionContent","activeSectionIndex","activeChildKeys","selectedTabIndex","ContentNav_ContentNav","TabContent","activeTab","childKeys","TabbedContent_TabbedContent","AboutMe","children","sectionIndex","getActiveSectionChildKeys","TabbedContentContainer_TabbedContentContainer","ProfileImage_ProfileImage","SectionSelector_SectionSelector","MobileSectionOption","updateActiveSectionBy","MobileSectionSelector","MobileSectionOption_MobileSectionOption","AboutMeModalNav","updateActiveSubsection","generateButtons","setActiveItem","activeSubsection","currentItem","activeItem","background","minWidth","maxWidth","subsection","_loop","getNavItemStyle","AboutMeModal","visible","closeModal","subsectionKeys","title","Modal","isOpen","toggle","close","aria-label","ModalHeader","AboutMeModalNav_AboutMeModalNav","ModalBody","MobileAboutMe","activeSection","AboutMeModal_AboutMeModal","activeSubsectionBy","MobileSectionSelector_MobileSectionSelector","modal","SkillCard","image","card","Card","CardBody","CardTitle","CardText","SkillButton","label","activeSkill","setActiveSkill","SkillRow","skills","activeSkills","generateSkillButtons","skill","calculateStyleValues","pop","determineClass","SkillButton_SkillButton","buttonWidth","margin","visibility","ToggleSkillsButton","SkillGrid","skillKeys","rows","generateSkillRows","skillRows","startIndex","endIndex","SkillRow_SkillRow","slice","reverse","SkillCard_SkillCard","ToggleSkillsButton_ToggleSkillsButton","SkillView","skillSet","SkillGrid_SkillGrid","MobileSkillModal","icon","id","MobileSkillButton","MobileSkillRow","generateSkillButton","MobileSkillButton_MobileSkillButton","MobileSkillGrid","MobileSkillRow_MobileSkillRow","MobileSkillView","MobileSkillModal_MobileSkillModal","MobileSkillGrid_MobileSkillGrid","GridButton","toggleActiveKey","activeKey","GridRow","generateProjectButtons","projectKeys","projectButtons","GridButton_GridButton","ProjectCard","generateProjectTags","tags","string","CardSubtitle","date","ToggleProjectButton","activeProject","ProjectsGrid","projectRows","GridRow_GridRow","ProjectCard_ProjectCard","ToggleProjectButton_ToggleProjectButton","Portfolio","portfolio","projects","links","ProjectsGrid_ProjectsGrid","MobileGridButton","nextProps","MobileGridRow","MobileGridButton_MobileGridButton","calculateMobileStyleValues","MobileProjectsGrid","MobileGridRow_MobileGridRow","MobileProjectModal","MobilePortfolio","MobileProjectModal_MobileProjectModal","MobileProjectsGrid_MobileProjectsGrid","ContactContent","toggleModal","ContactFormGroup","name","field","type","hasLabel","placeholder","FormGroup","Label","for","Input","onChange","ContactModal","formFields","firstName","lastName","email","phone","toggleContactForm","onFieldChange","e","preventDefault","newForm","target","Form","action","method","ContactFormGroup_ContactFormGroup","ContactView","ContactModal_ContactModal","ContactContent_ContactContent","Portal","activeView","screenSize","DefaultView_DefaultView","MobileAboutMe_MobileAboutMe","AboutMe_AboutMe","MobileSkillView_MobileSkillView","SkillView_SkillView","MobilePortfolio_MobilePortfolio","Portfolio_Portfolio","ContactView_ContactView","helpers","App","isHome","classes","filter","pulse","checkSize","onresize","Portal_Portal","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3839ca2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/canoe.d6267b80.png\";","import $ from 'jquery';\r\n\r\nexport function determineScreenSize(){\r\n  let screenWidth = $(window).outerWidth(true);\r\n  return getScreenSize(screenWidth);\r\n}\r\n\r\n//returns a string descriptor of the screen size.\r\nfunction getScreenSize(width){\r\n  if(width >= 1200){\r\n    return 'xlarge';\r\n  } else if (width >= 992 && width <= 1199 ){\r\n    return 'large';\r\n  } else if (width >=768 && width <= 991){\r\n    return 'medium';\r\n  } else if (width >= 576 && width <= 767){\r\n    return 'small';\r\n  } else if (width <= 575){\r\n    return 'xsmall'\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function capitalizeEveryWord(text){\r\n  if(text === undefined){\r\n    return \"\";\r\n  }\r\n  let textArray = text.split(\" \");\r\n  for(let item in textArray){\r\n    textArray[item] = capitalize(textArray[item])\r\n  }\r\n  return textArray.join(\" \")\r\n}\r\n\r\nexport function capitalize(word){\r\n  let strArray = word.split(\"\");\r\n  if(strArray[0] !== undefined){\r\n    strArray[0] = strArray[0].toUpperCase();\r\n  }\r\n  if(strArray[0] === undefined){\r\n    console.log(word)\r\n  }\r\n  return strArray.join(\"\");\r\n}\r\n\r\nexport function detectOrientationChange(currentOrientationState){\r\n  let screenHeight= window.innerHeight;\r\n  let screenWidth = window.innerWidth;\r\n  let newOrientationState;\r\n  screenWidth > screenHeight ? newOrientationState = \"landscape\" : newOrientationState = \"portrait\"\r\n  if(currentOrientationState !== newOrientationState){\r\n    return newOrientationState;\r\n  }\r\n  return currentOrientationState;\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, Col, Row } from 'reactstrap'\r\n\r\n\r\nexport class ChangeViewBlock extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      view: this.props.view,\r\n      text: this.props.text,\r\n      setActiveView: this.props.setActiveView\r\n    })\r\n  }\r\n  render(){\r\n    return(\r\n      <Row className={\"main-row\"} >\r\n        <Col className={\"main-row-col\"}\r\n          xl={{ size: 8, offset: 2 }}\r\n          lg={{ size: 8, offset: 2 }}\r\n          md={{ size: 8, offset: 2 }}\r\n          sm={{ size: 8, offset: 2 }}\r\n          xs={{ size: 10, offset: 1 }}\r\n        >\r\n          <Button\r\n            onClick={() => {this.props.setActiveView(this.props.view)}}\r\n          >\r\n            <p>{this.state.text}</p>\r\n          </Button>\r\n        </Col>\r\n        <Col className={\"main-row-col-filter\"}\r\n          xl={{ size: 8, offset: 2 }}\r\n          lg={{ size: 8, offset: 2 }}\r\n          md={{ size: 8, offset: 2 }}\r\n          sm={{ size: 8, offset: 2 }}\r\n          xs={{ size: 10, offset: 1 }}\r\n        ></Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { ChangeViewBlock } from '../Components/ChangeViewBlock.jsx';\r\n\r\nexport class DefaultView extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      setActiveView: this.props.setActiveView\r\n    };\r\n  }\r\n\r\n  render(){\r\n    let buttons = []\r\n    let items = [\r\n      {\r\n        \"view\": \"AboutMeView\",\r\n        \"text\": \"About Me\"\r\n      },\r\n      {\r\n        \"view\": \"SkillView\",\r\n        \"text\": \"What I Can Do\"\r\n      },\r\n      {\r\n        \"view\": \"PortfolioView\",\r\n        \"text\": \"Portfolio\"\r\n      },\r\n      {\r\n        \"view\": \"ContactView\",\r\n        \"text\": \"Contact Me\"\r\n      }\r\n    ]\r\n    for(let item in items){\r\n      buttons.push(\r\n        <ChangeViewBlock\r\n          view={items[item].view}\r\n          text={items[item].text}\r\n          setActiveView={this.props.setActiveView}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Container className=\"default-view-container\">\r\n        {buttons}\r\n      </Container >\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nexport class ProfileImage extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      \"style\": {\r\n        \"backgroundSize\": \"cover\",\r\n        \"backgroundImage\": `url(${require(\"../../data/canoe.png\")})`\r\n      }\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className={\"profile-image\"} style={this.state.style}/>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Button, Row } from 'reactstrap';\r\n\r\n\r\nexport class SectionOption extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      updateActiveSection: this.props.updateActiveSection\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      index: this.props.index,\r\n      option: this.props.option,\r\n      style: this.props.style\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Row className={\"section-option\"}>\r\n        <Button onClick={() =>{this.props.updateActiveSection(this.state.index)}} style={this.state.style}>\r\n          {this.props.option}\r\n        </Button>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport { SectionOption } from './SectionOption';\r\n\r\n\r\nexport class SectionSelector extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      updateActiveSection: this.props.updateActiveSection\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      sections: this.props.sections,\r\n      keys: Object.keys(this.props.sections)\r\n    });\r\n  }\r\n\r\n  render(){\r\n    let optionButtons = [];\r\n    let index = 0;\r\n    if(this.state.keys){\r\n      let buttonHeight = `${(35/this.state.keys.length)-1}vh`;\r\n      for(let item in this.state.keys){\r\n        optionButtons.push(\r\n          <SectionOption\r\n            index={index}\r\n            style={{\"minHeight\": `${buttonHeight}`, \"maxHeight\": `${buttonHeight}`}}\r\n            option={this.state.keys[item]}\r\n            updateActiveSection={this.state.updateActiveSection}\r\n          />\r\n        )\r\n        index++;\r\n      }\r\n    }\r\n    return(optionButtons);\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { NavItem, NavLink} from 'reactstrap';\r\n\r\nexport class ContentTab extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      updateActiveChildTab: this.props.updateActiveChildTab\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      index: this.props.index,\r\n      text: this.props.text,\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.text !== this.props.text){\r\n      this.setState({\r\n        index: this.state.index,\r\n        text: this.props.text\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <NavItem>\r\n        <NavLink\r\n          className={\"content-tab\"} //classnames({ active: this.state.activeTab === '1' })\r\n          onClick={() => {this.state.updateActiveChildTab(this.state.index)}}\r\n        >\r\n          {this.state.text}\r\n        </NavLink>\r\n      </NavItem>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Nav, Navbar } from 'reactstrap';\r\nimport { ContentTab } from './ContentTab';\r\n\r\nexport class ContentNav extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      updateActiveChildTab: this.props.updateActiveChildTab,\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeChild: this.props.activeChild,\r\n      tabItems: this.props.tabs,\r\n      tabs: this.generateTabs(this.props.tabs)\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.tabItems !== this.props.tabs){\r\n      this.setState({\r\n        tabItems: this.props.tabs,\r\n        tabs: this.generateTabs(this.props.tabs)\r\n      })\r\n    }\r\n    if(this.state.activeChild !== this.props.activeChild){\r\n      this.setState({\r\n        activeChild: this.props.activeChild\r\n      })\r\n    }\r\n  }\r\n\r\n  generateTabs(subsections){\r\n    let index = 0;\r\n    let tabs = [];\r\n    for(let item in subsections){\r\n      tabs.push(\r\n        <ContentTab\r\n          index={index}\r\n          text={subsections[item]}\r\n          updateActiveChildTab={this.state.updateActiveChildTab}\r\n        />\r\n      )\r\n      index = index + 1;\r\n    }\r\n    return tabs;\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Navbar className=\"section-tabs-container\">\r\n        <Nav tabs className={\"section-tabs\"}>\r\n          {this.state.tabItems !== undefined ? this.state.tabs : null}\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { TabPane, Row, Col } from 'reactstrap';\r\n\r\nexport class ContentPane extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      index: this.props.index,\r\n      columnSize: 12,\r\n      content: {\r\n        \"header\": \"\",\r\n        \"body\": \"\"\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      content: {\r\n        \"header\": this.props.content.header,\r\n        \"body\": this.props.content.body\r\n      },\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.content.body !== this.props.content.body){\r\n      this.setState({\r\n        index: this.props.index,\r\n        content: {\r\n          \"header\": this.props.content.header,\r\n          \"body\": this.props.content.body\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <TabPane tabId={this.state.index} className={\"section-content\"}>\r\n        <Row>\r\n          <Col sm={this.state.columnSize}>\r\n            <h4>{this.state.content.header}</h4>\r\n            <p >{this.state.content.body}</p>\r\n          </Col>\r\n        </Row>\r\n      </TabPane>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ContentPane } from './ContentPane';\r\n\r\nexport class TabbedContent extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      \"content\": {\r\n        \"header\": \"\",\r\n        \"body\": \"\"\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      content: this.props.content,\r\n      panes: this.generateContentPanes(this.props.content)\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.content !== this.props.content){\r\n      console.log('content updating')\r\n      this.setState({\r\n        content: this.props.content,\r\n        panes: this.generateContentPanes(this.props.content)\r\n      })\r\n    }\r\n  }\r\n\r\n  generateContentPanes(content){\r\n    let contentPanes = [];\r\n    if(content){\r\n      let index = 0;\r\n      let contentKeys = Object.keys(content);\r\n      for(let item in contentKeys){\r\n        contentPanes.push(\r\n          <ContentPane\r\n            key={contentKeys[item]}\r\n            index={index}\r\n            content={content[contentKeys[item]]}\r\n            updateActiveChildTab={this.state.updateActiveChildTab}\r\n          />\r\n        )\r\n        index = index+1;\r\n      }\r\n    }\r\n    return contentPanes;\r\n  }\r\n\r\n  render(){\r\n    return(this.state.panes !== undefined ? this.state.panes : null)\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Col, TabContent } from 'reactstrap';\r\nimport { ContentNav } from './ContentNav';\r\nimport { TabbedContent } from './TabbedContent';\r\n\r\nexport class TabbedContentContainer extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {}\r\n    this.updateActiveChildTab = this.updateActiveChildTab.bind(this)\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      keys: this.props.keys,\r\n      activeSectionContent: this.props.activeSectionContent,\r\n      activeSectionIndex: this.props.activeSectionIndex,\r\n      activeChildKeys: this.props.activeChildKeys,\r\n      activeChild: this.props.activeChild,\r\n      sections: this.props.sections\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeSectionIndex !== this.props.activeSectionIndex){\r\n      this.setState({\r\n        activeSectionContent: this.props.activeSectionContent,\r\n        activeSectionIndex: this.props.activeSectionIndex,\r\n      })\r\n    }\r\n    if(this.state.activeChildKeys !== this.props.activeChildKeys){\r\n      this.setState({activeChildKeys: this.props.activeChildKeys})\r\n    }\r\n  }\r\n\r\n  updateActiveChildTab(selectedTabIndex){\r\n    this.setState({\r\n      activeChild: selectedTabIndex\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Col\r\n        xl={{ size: 6, offset: 0 }}\r\n        lg={{ size: 6, offset: 0 }}\r\n        md={{ size: 6, offset: 0 }}\r\n        sm={{ size: 6, offset: 0 }}\r\n        xs={{ size: 6, offset: 0 }}\r\n        className={\"about-me-left-col\"}\r\n      >\r\n        <ContentNav\r\n          tabs={this.state.activeChildKeys}\r\n          updateActiveChildTab={this.updateActiveChildTab}\r\n          activeChild={this.state.activeChild}\r\n        />\r\n        <TabContent\r\n          activeTab={this.state.activeChild}\r\n          tabs={this.state.childKeys}\r\n        >\r\n          <TabbedContent\r\n            content={this.state.activeSectionContent}\r\n          />\r\n        </TabContent >\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { ProfileImage } from './ProfileImage';\r\nimport { SectionSelector } from './Navigation/SectionSelector';\r\nimport { TabbedContentContainer } from './Content/TabbedContentContainer';\r\n\r\n\r\nimport sections from './aboutme.json';\r\n\r\nexport class AboutMe extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      keys: Object.keys(sections),\r\n      activeSectionContent: sections[Object.keys(sections)[0]].body,\r\n      activeChild: 0,\r\n      activeSectionIndex: 0,\r\n      sections: sections\r\n    }\r\n    this.updateActiveSection = this.updateActiveSection.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeSectionIndex: 0,\r\n      activeSectionContent: this.state.sections[this.state.keys[0]].body,\r\n      activeChildKeys: Object.keys(sections[this.state.keys[0]].body),\r\n      activeChild: this.props.activeChild,\r\n    })\r\n  }\r\n\r\n  getActiveSectionChildKeys(sections, activeSectionIndex, keys){\r\n    let children = Object.keys(sections[keys[activeSectionIndex]].body);\r\n    let childKeys = Object.keys(children);\r\n    for(let item in childKeys){\r\n      console.log(`Child Key: ${children[childKeys[item]]}`)\r\n    }\r\n  }\r\n\r\n  updateActiveSection(sectionIndex){\r\n    this.setState({\r\n      activeChild: this.props.activeChild,\r\n      activeSectionIndex: sectionIndex,\r\n      activeChildKeys: Object.keys(sections[this.state.keys[sectionIndex]].body),\r\n      activeSectionContent: this.state.sections[this.state.keys[sectionIndex]].body,\r\n    })\r\n  }\r\n\r\n  render(){\r\n    if(this.state.activeSectionIndex){\r\n      this.getActiveSectionChildKeys(this.state.sections, this.state.activeSectionIndex, this.state.keys)\r\n    }\r\n\r\n    return(\r\n      <Row className={\"about-me-view\"}>\r\n        <div className={\"about-me-filter\"} />\r\n        <TabbedContentContainer\r\n          keys={this.state.keys}\r\n          activeSectionContent={this.state.activeSectionContent}\r\n          activeSectionIndex={this.state.activeSectionIndex}\r\n          activeChildKeys={this.state.activeChildKeys}\r\n          activeChild={this.state.activeChild}\r\n          updateActiveSection={this.updateActiveSection}\r\n          sections={this.state.sections}\r\n        />\r\n        <Col\r\n          xl={{ size: 5, offset: 0 }}\r\n          lg={{ size: 5, offset: 0 }}\r\n          md={{ size: 5, offset: 0 }}\r\n          sm={{ size: 5, offset: 0 }}\r\n          xs={{ size: 5, offset: 0 }}\r\n          className={\"about-me-right-col\"}\r\n        >\r\n          <Row className={\"profile-image-container\"}>\r\n            <ProfileImage />\r\n          </Row>\r\n          <Row className={\"section-options-container\"}>\r\n            <SectionSelector\r\n              sections={this.state.sections}\r\n              updateActiveSection={this.updateActiveSection}\r\n            />\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Button, Row } from 'reactstrap';\r\n\r\n\r\nexport class MobileSectionOption extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      updateActiveSectionBy: this.props.updateActiveSectionBy\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      index: this.props.index,\r\n      option: this.props.option\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Row className={\"section-option\"}>\r\n        <Button onClick={() => {this.state.updateActiveSectionBy(this.state.index)}} >\r\n          {this.props.option}\r\n        </Button>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport { MobileSectionOption } from './MobileSectionOption';\r\n\r\n\r\nexport class MobileSectionSelector extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      updateActiveSectionBy: this.props.updateActiveSectionBy\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      sections: this.props.sections,\r\n      keys: Object.keys(this.props.sections)\r\n    });\r\n  }\r\n\r\n  render(){\r\n    let optionButtons = [];\r\n    let index = 0;\r\n    if(this.state.keys){\r\n      for(let item in this.state.keys){\r\n        optionButtons.push(\r\n          <MobileSectionOption\r\n            key={index}\r\n            index={index}\r\n            option={this.state.keys[item]}\r\n            updateActiveSectionBy={this.state.updateActiveSectionBy}\r\n          />\r\n        )\r\n        index++;\r\n      }\r\n    }\r\n    return(optionButtons);\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Navbar, Nav, NavItem } from 'reactstrap';\r\n\r\nexport class AboutMeModalNav extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      updateActiveSubsection: this.props.updateActiveSubsection\r\n    }\r\n    this.generateButtons = this.generateButtons.bind(this);\r\n    this.setActiveItem = this.setActiveItem.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      items: this.props.items,\r\n      activeSubsection: this.props.activeSubsection,\r\n      buttons: this.generateButtons()\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.props.activeSubsection !== undefined && this.state.activeSubsection !== this.props.activeSubsection){\r\n      this.setState({\r\n        activeSubsection: this.props.activeSubsection,\r\n        buttons: this.generateButtons()\r\n      })\r\n    }\r\n  }\r\n\r\n  getNavItemStyle(currentItem, activeItem){\r\n    console.log(`Current Item : ${currentItem} | Active Item : ${activeItem}\\n`)\r\n    if(currentItem === activeItem){\r\n      return {\r\n        \"background\": `gray`,\r\n        \"minWidth\": `${100/this.props.items.length}%`,\r\n        \"maxWidth\": `${100/this.props.items.length}%`,\r\n        \"width\": `${100/this.props.items.length}%`\r\n      }\r\n    } else {\r\n      return {\r\n        \"minWidth\": `${100/this.props.items.length}%`,\r\n        \"maxWidth\": `${100/this.props.items.length}%`,\r\n        \"width\": `${100/this.props.items.length}%`\r\n      }\r\n    }\r\n  }\r\n\r\n  setActiveItem(subsection){\r\n    this.setState({\r\n      activeSubsection: subsection\r\n    })\r\n  }\r\n\r\n  generateButtons(){\r\n    let buttons = [];\r\n    let style;\r\n\r\n    for(let item in this.props.items){\r\n      style = this.getNavItemStyle(this.props.items[item], this.props.activeSubsection);\r\n      buttons.push(\r\n        <NavItem\r\n          key={item}\r\n          style={style}\r\n          onClick={() => {this.state.updateActiveSubsection(this.props.items[item])}}>{this.props.items[item]}\r\n        </NavItem>\r\n      )\r\n    }\r\n    return buttons;\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Navbar className={\"about-me-section-nav\"}>\r\n        <Nav>\r\n          {this.state.buttons}\r\n        </Nav>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\n\r\nimport { AboutMeModalNav } from './AboutMeModalNav';\r\n\r\nexport class AboutMeModal extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      closeModal: this.props.closeModal\r\n    };\r\n    this.updateActiveSubsection = this.updateActiveSubsection.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeSubsection: Object.keys(this.props.content)[0],\r\n      subsectionKeys: Object.keys(this.props.content),\r\n      content: this.props.content,\r\n      body: this.props.content[Object.keys(this.props.content)[0]].body,\r\n      title: this.props.title,\r\n      visible: this.props.visible\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.props.content !== undefined && this.state.content !== this.props.content){\r\n      this.setState({\r\n        subsectionKeys: Object.keys(this.props.content),\r\n        title: this.props.title,\r\n        body: this.props.content[Object.keys(this.props.content)[0]].body,\r\n        content: this.props.content,\r\n      })\r\n    }\r\n    if(this.props.visible !== undefined && this.state.visible !== this.props.visible){\r\n      this.setState({\r\n        visible: this.props.visible\r\n      })\r\n    }\r\n    if(this.props.activeSubsection !== undefined && this.state.activeSubsection !== this.props.activeSubsection){\r\n      this.setState({\r\n        activeSubsection: this.props.activeSubsection\r\n      })\r\n    }\r\n  }\r\n\r\n  updateActiveSubsection(subsection){ //subsection = this.props.content key [string]\r\n    this.setState({\r\n      activeSubsection: subsection,\r\n      body: this.state.content[subsection].body\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Modal\r\n        className=\"about-me-modal\"\r\n        isOpen={this.state.visible}\r\n        toggle={this.state.closeModal}\r\n      >\r\n        <Button\r\n          className=\"about-me-modal-close-button\"\r\n          close aria-label=\"Cancel\"\r\n          size=\"lg\"\r\n        />\r\n        <ModalHeader className={\"about-me-modal header\"}>\r\n        {this.state.title ? this.state.title : null }\r\n        </ModalHeader>\r\n        {this.state.subsectionKeys\r\n          ? <AboutMeModalNav\r\n              activeSubsection={this.state.activeSubsection}\r\n              items={this.state.subsectionKeys}\r\n              updateActiveSubsection={this.updateActiveSubsection}\r\n            />\r\n          : null\r\n        }\r\n        <ModalBody >\r\n          { this.state.content\r\n            ? this.state.body\r\n            : null\r\n          }\r\n        </ModalBody>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { MobileSectionSelector } from './Navigation/MobileSectionSelector';\r\nimport { AboutMeModal } from './Content/AboutMeModal';\r\n\r\nimport sections from '../aboutme.json';\r\n\r\nexport class MobileAboutMe extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      activeSectionContent: null,\r\n      activeSection: null,\r\n      keys: Object.keys(sections),\r\n      sections: sections\r\n    }\r\n    this.closeModal = this.closeModal.bind(this);\r\n    this.updateActiveSectionBy = this.updateActiveSectionBy.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.activeSectionIndex !== undefined && this.state.activeSectionIndex !== this.props.activeSectionIndex){\r\n      this.setState({\r\n        activeSectionIndex: this.props.activeSectionIndex,\r\n        activeSectionContent:  this.state.sections[this.state.keys[this.props.activeSectionIndex]].body,\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    if(this.state.activeSectionIndex){\r\n      this.getActiveSectionChildKeys(this.state.sections, this.state.activeSectionIndex, this.state.keys)\r\n    }\r\n\r\n    return(\r\n      <Row className={\"about-me-view\"}>\r\n        <div className={\"about-me-filter\"} />\r\n        {this.state.activeSection !== null && this.state.activeSection !== undefined\r\n          ? <AboutMeModal\r\n              activeSubsectionBy={this.state.activeSubsectionBy}\r\n              closeModal={this.closeModal}\r\n              content={this.state.activeSectionContent}\r\n              title={this.state.activeSection}\r\n              visible={this.state.activeSection !== null}\r\n            />\r\n          : null\r\n        }\r\n        <Row className={\"section-options-container\"}>\r\n          <MobileSectionSelector\r\n            sections={this.state.sections}\r\n            updateActiveSectionBy={this.updateActiveSectionBy}\r\n          />\r\n        </Row>\r\n      </Row>\r\n    )\r\n  }\r\n\r\n  componentDidUpdate(){\r\n\r\n  }\r\n\r\n  closeModal(){\r\n    this.setState({\r\n      activeSection: null\r\n    })\r\n  }\r\n\r\n  updateActiveSectionBy(index){\r\n    console.log(this.state.sections[this.state.keys[index]].body)\r\n    this.setState({\r\n      activeSectionContent: this.state.sections[this.state.keys[index]].body,\r\n      activeSection: this.state.keys[index],\r\n      modal: true\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Card,  CardText, CardBody, CardTitle } from 'reactstrap';\r\n\r\n//TODO\r\n// implement skill modal functionality\r\n// implement project detail view components\r\n// style projects view\r\n// design structure of contact view\r\n// make contact form view functional\r\n\r\nexport class SkillCard extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      image: '',\r\n      title: '',\r\n      text: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      visible: this.props.visible\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(!this.props.visible){\r\n      this.setState({\r\n        visible: this.props.visible\r\n      })\r\n    }\r\n    if(this.props.card !== null && this.state.title !== this.props.card.title){\r\n      this.setState({\r\n        image: this.props.card.image,\r\n        title: this.props.card.title,\r\n        text: this.props.card.text\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      this.state.visible\r\n      ? <Card className=\"skill-card\">\r\n          <CardBody>\r\n            <CardTitle>{this.state.title}</CardTitle>\r\n            <CardText>{this.state.text}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      : null\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\nexport class SkillButton extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      label: this.props.label,\r\n      className: this.props.className,\r\n      activeSkill: this.props.activeSkill,\r\n      style: this.props.style\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeSkill !== this.props.activeSkill && this.props.activeSkill !== undefined){\r\n      this.setState({\r\n        activeSkill: this.props.activeSkill,\r\n        className: this.props.className,\r\n        style: this.props.style\r\n      })\r\n    }\r\n  }\r\n\r\n  capitalize(word){\r\n    if(word === undefined){ return word}\r\n    let strArray = word.split(\" \");\r\n    let split;\r\n    for(let item in strArray){\r\n      split = strArray[item].split(\"\");\r\n      split[0] = split[0].toUpperCase();\r\n      console.log(`split ${split[0]}`)\r\n      strArray[item]= split.join(\"\")\r\n    }\r\n    return strArray.join(\" \");\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Button\r\n        style={this.state.style}\r\n        onClick={this.props.setActiveSkill !== null ? ()=>{this.props.setActiveSkill(this.state.label)} : null} //this.props.setActiveSkill will be null if it is .hidden\r\n        className={this.state.className}\r\n      >\r\n        {this.capitalize(this.state.label)}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { SkillButton } from './SkillButton';\r\n\r\nexport class SkillRow extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      setActiveSkill: this.props.setActiveSkill\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.skills !== undefined){\r\n      this.setState({\r\n        activeSkills: this.props.activeSkill,\r\n        skills: this.props.skills, //subset of SkillGrid.state.skills, contains only the skills being generated in a given row\r\n        className: this.props.className,\r\n        buttons: this.generateSkillButtons()\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeSkill !== this.props.activeSkill && this.props.activeSkill !== undefined){\r\n      console.log(this.props.skills)\r\n      this.setState({\r\n        activeSkill: this.props.activeSkill,\r\n        skills: this.props.skills,\r\n        className: this.props.className,\r\n        buttons: this.generateSkillButtons()\r\n      })\r\n    }\r\n  }\r\n\r\n  determineClass(skill, activeSkill){ //conditionally appends .active or .hidden class to button\r\n    if(activeSkill !== '' && activeSkill !== undefined){\r\n      return \"grid-button hidden\"\r\n    }\r\n    return \"grid-button\"\r\n  }\r\n\r\n  generateSkillButtons(){\r\n    let buttons = [];\r\n    let skill, className;\r\n    let style = this.calculateStyleValues(this.props.skills)\r\n    while(this.props.skills.length > 0){\r\n      skill = this.props.skills.pop();\r\n      className = this.determineClass(skill, this.props.activeSkill)\r\n      buttons.push(\r\n        <SkillButton\r\n          style={style}\r\n          activeSkill={this.props.activeSkill} //set from props rather than state because this function is called within setState() and returns a state attribute value\r\n          className={className}\r\n          label={skill}\r\n          setActiveSkill={className === \"skill-grid-button hidden\" ? null : this.state.setActiveSkill}\r\n        />\r\n      )\r\n    }\r\n    return buttons;\r\n  }\r\n\r\n  calculateStyleValues(skills){  //Calculates the attribute values for the style object that will be passed to\r\n    let buttonWidth = `${(90/skills.length)}`; //the SkillButton components being generated\r\n    return {\r\n            \"minWidth\": `${buttonWidth}%`,\r\n            \"maxWidth\": `${buttonWidth}%`,\r\n            \"width\": `${buttonWidth}%`,\r\n            \"margin\": `1vh ${(100-(buttonWidth*skills.length))/(skills.length*2)}%`,\r\n            \"visibility\": this.props.activeSkill ? \"hidden\" : \"visible\"\r\n          }\r\n  }\r\n\r\n  render(){\r\n    if(this.state.buttons){\r\n      return(\r\n        <Row className={this.state.className}>\r\n          {this.state.buttons}\r\n        </Row>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport class ToggleSkillsButton extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      setActiveSkill: this.props.setActiveSkill\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeSkill: this.props.activeSkill\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeSkill !== this.props.activeSkill){\r\n      this.setState({\r\n        activeSkill: this.props.activeSkill\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Button\r\n        onClick={()=>{this.props.setActiveSkill(this.state.activeSkill)}} //this.props.setActiveSkill will be null if it is .hidden\r\n        className={\"card-close-button\"}\r\n      >\r\n      {\"Close\"}\r\n      </Button>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Col } from 'reactstrap';\r\nimport { SkillCard } from './SkillCard';\r\nimport { SkillRow } from './SkillRow';\r\nimport { ToggleSkillsButton } from './ToggleSkillsButton';\r\n\r\nexport class SkillGrid extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      setActiveSkill: this.props.setActiveSkill\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      skills: this.props.skills,\r\n      activeSkill: this.props.activeSkill,\r\n      skillKeys: this.props.keys,\r\n      rows: this.generateSkillRows()\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeSkill !==  this.props.activeSkill && this.props.activeSkill !== undefined){\r\n      this.setState({\r\n        activeSkill: this.props.activeSkill,\r\n        card: this.props.card,\r\n        rows: this.generateSkillRows()\r\n      })\r\n    }\r\n  }\r\n\r\n  generateSkillRows(){                    // pushes each skill object in props to an array, will be\r\n    let skills = [];                      // iterated through when pushing objects to SkillRow components\r\n    let skillRows = [];                   // stores the generated SkillRow components, will be returned\r\n    let startIndex = 0;                   // ending index of objects being passed to SkillRow component\r\n    let endIndex = 5;                     // ending index of objects being passed to SkillRow component\r\n    for(let skill in this.props.keys){\r\n      skills.push(this.props.keys[skill])\r\n    }\r\n    if(this.props.keys.length < 4){               // If there are not enough objects to fill a full row,\r\n      skillRows.push(                             // we insert what objects are there and return them.\r\n        <SkillRow\r\n          activeSkill={this.props.activeSkill}\r\n          className={\"skill-grid-row\"}\r\n          skills={skills.slice(startIndex, skills.length)}\r\n          key={`${startIndex}_${endIndex}`}\r\n          setActiveSkill={this.state.setActiveSkill}\r\n        />\r\n      )\r\n      return skillRows\r\n    } else { // otherwise we push the initial row\r\n      skillRows.push(\r\n        <SkillRow\r\n          activeSkill={this.props.activeSkill}\r\n          className={\"skill-grid-row\"}\r\n          skills={skills.slice(startIndex, endIndex)}\r\n          key={`${startIndex}_${endIndex}`}\r\n          setActiveSkill={this.state.setActiveSkill}\r\n        />\r\n      )\r\n    }\r\n    while(endIndex < skills.length && skills !== undefined){       // After the first row is inserted,\r\n      startIndex =  endIndex                                       // we iterate through the remaining objects\r\n      endIndex+5 > skills.length                                   // and make sure the end index !> skills.length\r\n    ? endIndex = skills.length                                     // if it is, we make the end index === skills.length\r\n      : endIndex = endIndex+5                                      // (which will be the number of items to a row)\r\n      skillRows.push(\r\n        <SkillRow\r\n          activeSkill={this.props.activeSkill}\r\n          className={\"skill-grid-row\"}\r\n          skills={skills.slice(startIndex, endIndex)}         //pushing generated component to skillRows.array\r\n          key={`${startIndex}_${endIndex}`}\r\n          setActiveSkill={this.state.setActiveSkill}\r\n        />\r\n      )\r\n    }\r\n    return skillRows.reverse();\r\n  }\r\n\r\n\r\n  render(){\r\n    if(this.state.skillRows){\r\n      return (this.state.skillRows)\r\n    }\r\n    return(\r\n      <Col\r\n        className={\"skill-grid\"}\r\n        xl={{ size: 10, offset: 1 }}\r\n        lg={{ size: 10, offset: 1 }}\r\n        md={{ size: 10, offset: 1 }}\r\n        sm={{ size: 10, offset: 1 }}\r\n        xs={{ size: 10, offset: 1 }}\r\n      >\r\n        <div className={\"grid-filter\"}></div>\r\n        {this.state.card !== null\r\n          ? <SkillCard\r\n              visible={this.state.card !== null}\r\n              card={this.state.card ? this.state.card : null}\r\n            />\r\n          : null\r\n        }\r\n        {this.state.rows}\r\n        {this.state.activeSkill !== \"\"\r\n          ? <ToggleSkillsButton\r\n                activeSkill={this.state.activeSkill}\r\n                className={\"card-close-button\"}\r\n                setActiveSkill={this.state.setActiveSkill}\r\n              />\r\n          : null\r\n        }\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Row } from 'reactstrap';\r\n\r\nimport {SkillGrid} from './Grid/SkillGrid';\r\n\r\n\r\nimport skills from './skillset.json';\r\n\r\n//TODO style rows\r\n\r\nexport class SkillView extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      skillSet: skills,\r\n      card: null,\r\n      skillKeys: Object.keys(skills)\r\n    };\r\n    this.setActiveSkill = this.setActiveSkill.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeSkill: '',\r\n      modal: false\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n\r\n  }\r\n\r\n  setActiveSkill(skill){\r\n    if(this.state.activeSkill === skill){\r\n      this.setState({\r\n        activeSkill: '',\r\n        card: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        activeSkill: skill,\r\n        card: {\r\n          image: \"\", //this.state.skillSet[skill].content.icon\r\n          title: this.state.skillSet[skill].content.header,\r\n          text: this.state.skillSet[skill].content.text\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render(){\r\n    return(\r\n      <Row className={\"skillset-view-container\"}>\r\n        <SkillGrid\r\n          skills={this.state.skillSet}\r\n          keys={this.state.skillKeys}\r\n          activeSkill={this.state.activeSkill}\r\n          setActiveSkill={this.setActiveSkill}\r\n          card={this.state.card !== null ? this.state.card : null}\r\n        />\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody} from 'reactstrap';\r\n\r\n\r\nexport class MobileSkillModal extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      card: {\r\n          \"icon\": \"modal icon\",\r\n          \"title\": \"modal title\",\r\n          \"text\": \"modal text\"\r\n      },\r\n      visible: false,\r\n      closeModal: this.props.closeModal\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.card !== null && this.props.card !== undefined){\r\n      this.setState({\r\n        card: {\r\n          \"icon\": this.props.card.icon,\r\n          \"title\": this.props.card.title,\r\n          \"text\": this.props.card.text\r\n        },\r\n        visible: this.props.visible\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.props.card === null){\r\n      this.setState({\r\n        visible: this.props.visible,\r\n        card: this.props.card\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Modal isOpen={this.state.visible}  className=\"skill-modal\" id=\"skillModal\">\r\n        <Button\r\n          className=\"skills-modal-close-button\"\r\n          close aria-label=\"Cancel\"\r\n          size=\"lg\"\r\n          onClick={this.state.closeModal}\r\n        />\r\n        <ModalHeader className=\"project-modal-header\">{this.state.card.title}</ModalHeader>\r\n          <ModalBody >\r\n            <div>{this.state.card.icon}</div>\r\n            <div>{this.state.card.text}</div>\r\n          </ModalBody>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\nexport class MobileSkillButton extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      label: this.props.label,\r\n      className: this.props.className,\r\n      activeSkill: this.props.activeSkill,\r\n      style: this.props.style\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeSkill !== this.props.activeSkill && this.props.activeSkill !== undefined){\r\n      this.setState({\r\n        activeSkill: this.props.activeSkill,\r\n        className: this.props.className,\r\n        style: this.props.style\r\n      })\r\n    }\r\n  }\r\n\r\n  capitalize(word){\r\n    if(word === undefined){ return word}\r\n    let strArray = word.split(\" \");\r\n    let split;\r\n    for(let item in strArray){\r\n      split = strArray[item].split(\"\");\r\n      split[0] = split[0].toUpperCase();\r\n      strArray[item]= split.join(\"\")\r\n    }\r\n    return strArray.join(\" \");\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Button\r\n        style={this.state.style}\r\n        onClick={this.props.setActiveSkill !== null ? ()=>{this.props.setActiveSkill(this.state.label)} : null} //this.props.setActiveSkill will be null if it is .hidden\r\n        className={this.state.className}\r\n      >\r\n        {this.capitalize(this.state.label)}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { MobileSkillButton } from './MobileSkillButton';\r\n\r\nexport class MobileSkillRow extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      setActiveSkill: this.props.setActiveSkill\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.skills !== undefined){\r\n      this.setState({\r\n        activeSkills: this.props.activeSkill,\r\n        skills: this.props.skills, //subset of SkillGrid.state.skills, contains only the skills being generated in a given row\r\n        className: this.props.className,\r\n        buttons: this.generateSkillButton()\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeSkill !== this.props.activeSkill && this.props.activeSkill !== undefined){\r\n      this.setState({\r\n        activeSkill: this.props.activeSkill,\r\n        skills: this.props.skills,\r\n        className: this.props.className,\r\n        buttons: this.generateSkillButton()\r\n      })\r\n    }\r\n  }\r\n\r\n  determineClass(skill, activeSkill){ //conditionally appends .active or .hidden class to button\r\n    if(activeSkill !== '' && activeSkill !== undefined){\r\n      return \"grid-button hidden\"\r\n    }\r\n    return \"grid-button\"\r\n  }\r\n\r\n  generateSkillButton(){\r\n    let style = this.calculateStyleValues(this.props.skills)\r\n    let skill = this.props.skills;\r\n    let className = this.determineClass(skill, this.props.activeSkill)\r\n\r\n    return  <MobileSkillButton\r\n              style={style}\r\n              activeSkill={this.props.activeSkill} //set from props rather than state because this function is called within setState() and returns a state attribute value\r\n              className={className}\r\n              label={skill}\r\n              setActiveSkill={className === \"skill-grid-button hidden\" ? null : this.state.setActiveSkill}\r\n            />\r\n  }\r\n\r\n  calculateStyleValues(skills){  //Calculates the attribute values for the style object that will be passed to\r\n    return {\r\n            \"minWidth\": `90%`,\r\n            \"maxWidth\": `90%`,\r\n            \"width\": `90%`,\r\n            \"margin\": `1vh 5vw`,\r\n            \"visibility\": this.props.activeSkill ? \"hidden\" : \"visible\"\r\n          }\r\n  }\r\n\r\n  render(){\r\n    if(this.state.buttons){\r\n      return(\r\n        <Row className={this.state.className}>\r\n          {this.state.buttons}\r\n        </Row>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Col } from 'reactstrap';\r\nimport { MobileSkillRow } from './MobileSkillRow';\r\n\r\nexport class MobileSkillGrid extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      setActiveSkill: this.props.setActiveSkill\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      skills: this.props.skills,\r\n      activeSkill: this.props.activeSkill,\r\n      skillKeys: this.props.keys,\r\n      rows: this.generateSkillRows()\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeSkill !==  this.props.activeSkill && this.props.activeSkill !== undefined){\r\n      this.setState({\r\n        activeSkill: this.props.activeSkill,\r\n        card: this.props.card,\r\n        rows: this.generateSkillRows()\r\n      })\r\n    }\r\n  }\r\n\r\n  generateSkillRows(){                    // pushes each skill object in props to an array, will be\r\n    let skills = [];                      // iterated through when pushing objects to SkillRow components\r\n    let skillRows = [];                   // stores the generated SkillRow components, will be returned\r\n    for(let skill in this.props.keys){\r\n      skills.push(this.props.keys[skill])\r\n    }\r\n    for(let skill in skills){\r\n        skillRows.push(\r\n          <MobileSkillRow\r\n            activeSkill={this.props.activeSkill}\r\n            className={\"skill-grid-row\"}\r\n            skills={skills[skill]}\r\n            key={`${skill}`}\r\n            setActiveSkill={this.state.setActiveSkill}\r\n          />\r\n        )\r\n      }\r\n    return skillRows.reverse();\r\n  }\r\n\r\n\r\n  render(){\r\n    if(this.state.skillRows){\r\n      return (this.state.skillRows)\r\n    }\r\n    return(\r\n      <Col\r\n        className={\"skill-grid\"}\r\n        xl={{ size: 10, offset: 1 }}\r\n        lg={{ size: 10, offset: 1 }}\r\n        md={{ size: 12, offset: 0 }}\r\n        sm={{ size: 12, offset: 0 }}\r\n        xs={{ size: 12, offset: 0 }}\r\n      >\r\n        {this.state.rows !== undefined\r\n          ? <div className={\"grid-filter\"} style={{\"minHeight\": `${this.state.rows.length*15}vh`}}></div>\r\n          : null\r\n        }\r\n        {this.state.rows !== undefined\r\n          ? this.state.rows\r\n          : null\r\n        }\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Row } from 'reactstrap';\r\n\r\nimport { MobileSkillModal } from './Grid/MobileSkillModal';\r\nimport { MobileSkillGrid } from './Grid/MobileSkillGrid';\r\n\r\n\r\nimport skills from '../skillset.json';\r\n\r\n//TODO style rows\r\n\r\nexport class MobileSkillView extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      skillSet: skills,\r\n      card: null,\r\n      skillKeys: Object.keys(skills)\r\n    };\r\n    this.setActiveSkill = this.setActiveSkill.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeSkill: '',\r\n      modal: false\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n\r\n  }\r\n\r\n  setActiveSkill(skill){\r\n    if(this.state.activeSkill === skill){\r\n      this.setState({\r\n        activeSkill: '',\r\n        card: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        activeSkill: skill,\r\n        card: {\r\n          icon: this.state.skillSet[skill].content.icon,\r\n          title: this.state.skillSet[skill].content.header,\r\n          text: this.state.skillSet[skill].content.text\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  closeModal(){\r\n    this.setState({\r\n      activeSkill: null,\r\n      card: null\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    return(\r\n      <Row className={\"skillset-view-container\"}>\r\n        {this.state.card !== undefined && this.state.card !== null\r\n          ? <MobileSkillModal\r\n              visible={this.state.card !== null && this.state.card !== undefined}\r\n              card={this.state.card !== null && this.state.card !== undefined ? this.state.card : null}\r\n              closeModal={this.closeModal}\r\n            />\r\n          : null\r\n        }\r\n        <MobileSkillGrid\r\n          skills={this.state.skillSet}\r\n          keys={this.state.skillKeys}\r\n          activeSkill={this.state.activeSkill}\r\n          setActiveSkill={this.setActiveSkill}\r\n          card={this.state.card !== null ? this.state.card : null}\r\n        />\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport class GridButton extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      toggleActiveKey: this.props.toggleActiveKey\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      className: this.props.className,\r\n      item: this.props.item,\r\n      index: this.props.index,\r\n      activeKey: this.props.activeKey,\r\n      style: this.props.style\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeKey !== this.props.activeKey ){\r\n      this.setState({\r\n        style: this.props.style,\r\n        activeKey: this.props.activeKey,\r\n        className: this.props.className,\r\n        item: this.props.item\r\n      })\r\n    }\r\n  }\r\n\r\n  capitalize(word){\r\n    let strArray = word.split(\" \");\r\n    let split;\r\n    if(strArray[0] === undefined){ return word}\r\n    for(let item in strArray){\r\n      split = strArray[item].split(\"\");\r\n      split[0] = split[0].toUpperCase();\r\n      strArray[item]= split.join(\"\")\r\n    }\r\n    return strArray.join(\" \");\r\n  }\r\n\r\n  render(){\r\n    if(this.state.item){\r\n      return(\r\n        <Button\r\n          className={this.state.className}\r\n          onClick={()=>{this.props.toggleActiveKey(this.state.item)}}\r\n          style={this.state.style}\r\n        >\r\n          <div className={\"project-button-filter\"}/>\r\n          {this.capitalize(this.state.item)}\r\n        </Button>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row } from 'reactstrap';\r\n\r\nimport { GridButton } from './GridButton';\r\n\r\nexport class GridRow extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      toggleActiveKey: this.props.toggleActiveKey\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      className: this.props.className,\r\n      activeKey: this.props.activeKey,\r\n      buttons: this.generateProjectButtons()\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeKey !== this.props.activeKey ){\r\n      this.setState({activeKey: this.props.activeKey, buttons: this.generateProjectButtons()})\r\n    }\r\n  }\r\n\r\n  generateProjectButtons(){ //generates the buttons that will be contained in GridRow.state.buttons array\r\n    let projectKeys = Object.keys(this.props.items);\r\n    let projectButtons = [];\r\n    let index = 0;\r\n    let item;\r\n    while(projectKeys.length >= projectButtons.length){\r\n      item = this.props.items[projectKeys[index]];\r\n      projectButtons.push(\r\n        <GridButton\r\n          style={this.calculateStyleValues(projectKeys)}\r\n          className={\"grid-button\"}\r\n          toggleActiveKey={this.state.toggleActiveKey}\r\n          key={index}\r\n          item={item}\r\n          index={index}\r\n          activeKey={this.props.activeKey ? this.props.activeKey : null}\r\n        />\r\n      )\r\n      index = index +1;\r\n    }\r\n    return projectButtons\r\n  }\r\n\r\n  calculateStyleValues(projectKeys){  //Calculates the attribute values for the style object that will be passed to\r\n    let buttonWidth = `${(90/projectKeys.length)}`; //the GridButton components being generated\r\n    return {\r\n            \"minWidth\": `${buttonWidth}%`,\r\n            \"maxWidth\": `${buttonWidth}%`,\r\n            \"width\": `${buttonWidth}%`,\r\n            \"margin\": `2.5vh ${(100-(buttonWidth*projectKeys.length))/(projectKeys.length*2)}%`,\r\n            \"minHeight\": `${((8*(3/projectKeys.length))/(3.75-projectKeys.length))}vh`, //calculated using a base of 8vh, multiply by 3/(#items) in row, then divide by 3.75-(#items in row)\r\n            \"maxHeight\": `${((8*(3/projectKeys.length))/(3.75-projectKeys.length))}vh`,\r\n            \"visibility\": this.props.activeKey !== null && this.props.activeKey !== undefined ? \"hidden\" : \"visible\"\r\n          }\r\n  }\r\n\r\n  render(){\r\n    if(this.state.buttons){\r\n      return(\r\n        <Row className={this.state.className}>{this.state.buttons}</Row>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Card, CardText, CardBody, CardSubtitle, CardTitle } from 'reactstrap';\r\n\r\nexport class ProjectCard extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      visible: false\r\n    };\r\n    this.generateProjectTags = this.generateProjectTags.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      visible: this.props.visible,\r\n      card: this.props.card,\r\n      tags: this.generateProjectTags()\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.card !== this.props.card){\r\n      this.setState({\r\n        visible: this.props.visible,\r\n        card: this.props.card\r\n      })\r\n    }\r\n  }\r\n\r\n  generateProjectLinkButtons(){\r\n\r\n  }\r\n\r\n  generateProjectTags(){\r\n    let string = \"\";\r\n    console.log(this.props.card.tags)\r\n    for(let item in this.props.card.tags){\r\n      string = string + ` | ${this.props.card.tags[item]}`\r\n    }\r\n    string = string + \" |\"\r\n    return string\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      this.state.visible\r\n      ? <Card className=\"project-card\">\r\n          <CardBody>\r\n            <CardTitle className=\"project-title\">{this.state.card.title}</CardTitle>\r\n            <CardSubtitle className=\"project-date\">{this.state.card.date}</CardSubtitle>\r\n            <CardText>\r\n              <p className=\"project-tags\">{this.state.tags}</p>\r\n              <p className=\"project-description\">{this.state.card.text}</p>\r\n            </CardText>\r\n          </CardBody>\r\n        </Card>\r\n      : null\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport class ToggleProjectButton extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      toggleActiveKey: this.props.toggleActiveKey\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeProject: this.props.activeProject,\r\n      className: this.props.className\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeKey !== this.props.activeKey){\r\n      this.setState({\r\n        activeKey: this.props.activeKey\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Button\r\n        onClick={()=>{this.props.toggleActiveKey(this.state.activeKey)}} //this.props.setActiveSkill will be null if it is .hidden\r\n        className={this.state.className}\r\n      >\r\n        {\"Close\"}\r\n      </Button>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Col } from 'reactstrap';\r\nimport { GridRow } from './GridRow';\r\nimport { ProjectCard } from './ProjectCard';\r\nimport { ToggleProjectButton } from './ToggleProjectButton';\r\n\r\nexport class ProjectsGrid extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      toggleActiveKey: this.props.toggleActiveKey\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      className: this.props.className,\r\n      activeKey: this.props.activeKey,\r\n      items: this.props.items,\r\n      rows: this.generateProjectButtons(),\r\n      card: this.props.card,\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeKey !== this.props.activeKey){\r\n      this.setState({\r\n        activeKey: this.props.activeKey,\r\n        rows: this.generateProjectButtons()\r\n      })\r\n    }\r\n    if(this.state.card !== this.props.card){\r\n      this.setState({\r\n        card: this.props.card\r\n      })\r\n    }\r\n  }\r\n\r\n  generateProjectButtons(){\r\n    let items = this.props.items;\r\n    let projectRows = [];\r\n    let startIndex = 0;\r\n    let endIndex = 3;\r\n    projectRows.push(\r\n      <GridRow\r\n        activeKey={this.props.activeKey}\r\n        className={\"projects-row\"}\r\n        items={items.slice(startIndex, endIndex)}\r\n        key={`${startIndex}_${endIndex}`}\r\n        toggleActiveKey={this.state.toggleActiveKey}\r\n      />\r\n    )\r\n    while(endIndex < items.length && items !== undefined){\r\n      startIndex = endIndex;\r\n      (endIndex+3) > items.length\r\n        ? endIndex = startIndex + (items.length-startIndex)\r\n        : endIndex = endIndex+3\r\n      projectRows.push(\r\n        <GridRow\r\n          activeKey={this.props.activeKey}\r\n          className={\"projects-row\"}\r\n          items={items.slice(startIndex, endIndex)}\r\n          key={`${startIndex}_${endIndex}`}\r\n          toggleActiveKey={this.state.toggleActiveKey}\r\n        />\r\n      )\r\n    }\r\n    return projectRows.reverse(); //reversed so that incomplete row will be on top, if projects.length % (numberOfItemsInRow) !== 0\r\n  }\r\n\r\n  render(){\r\n    if(this.state.rows){\r\n      return(\r\n        <Col\r\n          xl={{ size: 10, offset: 1 }}\r\n          lg={{ size: 10, offset: 1 }}\r\n          md={{ size: 10, offset: 1 }}\r\n          sm={{ size: 10, offset: 1 }}\r\n          xs={{ size: 10, offset: 1 }}\r\n          className={\"projects-grid\"}\r\n        >\r\n          <div className={\"grid-filter\"}></div>\r\n          {this.state.card !== null\r\n            ? <ProjectCard\r\n                visible={this.state.card !== null}\r\n                card={this.state.card ? this.state.card : null}\r\n              />\r\n            : null\r\n          }\r\n          {this.state.rows}\r\n          {this.state.activeKey !== null && this.state.activeKey !== undefined\r\n            ? <ToggleProjectButton\r\n                activeKey={this.state.activeKey}\r\n                className={\"card-close-button\"}\r\n                toggleActiveKey={this.state.toggleActiveKey}\r\n              />\r\n            : null\r\n          }\r\n        </Col>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport portfolio from './portfolio.json';\r\n\r\nimport { ProjectsGrid } from './Grid/ProjectsGrid';\r\n\r\nexport class Portfolio extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      projectKeys: Object.keys(portfolio),\r\n      card: null,\r\n      projects: portfolio\r\n    };\r\n    this.toggleActiveKey = this.toggleActiveKey.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeKey: null\r\n    })\r\n  }\r\n\r\n  toggleActiveKey(key){\r\n    if(this.state.activeKey === key){                //if the key value passed from the button is equal to\r\n      this.setState({ activeKey: null, card: null }) // Portfolio.state.activeKey, resets activeKey and state.card to null\r\n    } else {\r\n      this.setState({   //if Portfolio.state.activeKey === null, sets Portfolio.state.activeKey and sets Portfolio.state.card object values from the values\r\n        activeKey: key, //found in Portfolio.state.projects\r\n        card: {\r\n          tags: this.state.projects[key].tags,\r\n          title: this.state.projects[key].content.header,\r\n          text: this.state.projects[key].content.text,\r\n          date: this.state.projects[key].date,\r\n          links: this.state.projects[key].links\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Row>\r\n        <ProjectsGrid\r\n          className={\"projects-grid\"}\r\n          items={this.state.projectKeys}\r\n          activeKey={this.state.activeKey}\r\n          card={this.state.card !== null ? this.state.card : null}\r\n          toggleActiveKey={this.toggleActiveKey}\r\n        />\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport class MobileGridButton extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      toggleActiveKey: this.props.toggleActiveKey\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      className: this.props.className,\r\n      item: this.props.item,\r\n      index: this.props.index,\r\n      activeKey: this.props.activeKey,\r\n      style: this.props.style\r\n    })\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n      if(nextProps.style !== this.state.style){\r\n          this.setState({style: nextProps.style});\r\n      }\r\n    }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeKey !== this.props.activeKey ){\r\n      this.setState({\r\n        activeKey: this.props.activeKey,\r\n        className: this.props.className,\r\n        item: this.props.item\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    if(this.state.item){\r\n      return(\r\n        <Button\r\n          className={this.state.className}\r\n          onClick={()=>{this.props.toggleActiveKey(this.state.item)}}\r\n          style={this.state.style}\r\n        >\r\n          <div className={\"project-button-filter\"}/>\r\n          {this.state.item}\r\n        </Button>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row } from 'reactstrap';\r\n\r\nimport { MobileGridButton } from './MobileGridButton';\r\n\r\nexport class MobileGridRow extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      toggleActiveKey: this.props.toggleActiveKey\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      className: this.props.className,\r\n      activeKey: this.props.activeKey,\r\n      item: this.props.item,\r\n      buttons: this.generateProjectButtons()\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeKey !== this.props.activeKey ){\r\n      this.setState({activeKey: this.props.activeKey, buttons: this.generateProjectButtons()})\r\n    }\r\n  }\r\n\r\n  generateProjectButtons(){ //generates the buttons that will be contained in GridRow.state.buttons array\r\n    let projectKeys = Object.keys(this.props.item);\r\n    let projectButtons = [];\r\n    let index = 0;\r\n    let item;\r\n      item = this.props.item;\r\n      projectButtons.push(\r\n        <MobileGridButton\r\n          style={this.calculateMobileStyleValues(projectKeys)}\r\n          className={\"mobile-grid-button\"}\r\n          toggleActiveKey={this.state.toggleActiveKey}\r\n          key={index}\r\n          item={item}\r\n          index={index}\r\n          activeKey={this.props.activeKey ? this.props.activeKey : null}\r\n        />\r\n      )\r\n      index = index +1;\r\n    return projectButtons\r\n  }\r\n\r\n  calculateMobileStyleValues(projectKeys){  //Calculates the attribute values for the style object that will be passed to\r\n    return {\r\n            \"minWidth\": `90%`,\r\n            \"maxWidth\": `90%`,\r\n            \"width\": `90%`,\r\n            \"margin\": `.5vh 5%`,\r\n            \"minHeight\": `10vh`,\r\n            \"maxHeight\": `fit-content`,\r\n            \"visibility\": this.props.activeKey !== null && this.props.activeKey !== undefined ? \"hidden\" : \"visible\"\r\n          }\r\n  }\r\n\r\n  render(){\r\n    if(this.state.buttons){\r\n      return(\r\n        <Row className={this.state.className}>{this.state.buttons}</Row>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Col } from 'reactstrap';\r\nimport { MobileGridRow } from './MobileGridRow';\r\n\r\nexport class MobileProjectsGrid extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      toggleActiveKey: this.props.toggleActiveKey\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      className: this.props.className,\r\n      activeKey: this.props.activeKey,\r\n      items: this.props.items,\r\n      rows: this.generateProjectButtons(),\r\n      card: this.props.card,\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeKey !== this.props.activeKey){\r\n      this.setState({\r\n        activeKey: this.props.activeKey,\r\n        rows: this.generateProjectButtons()\r\n      })\r\n    }\r\n    if(this.state.card !== this.props.card){\r\n      this.setState({\r\n        card: this.props.card\r\n      })\r\n    }\r\n  }\r\n\r\n  generateProjectButtons(){\r\n    let items = this.props.items;\r\n    let projectRows = [];\r\n    for(let item in items){\r\n      projectRows.push(\r\n        <MobileGridRow\r\n          activeKey={this.props.activeKey}\r\n          className={\"projects-row\"}\r\n          item={items[item]}\r\n          key={`${item}`}\r\n          toggleActiveKey={this.state.toggleActiveKey}\r\n        />\r\n      )\r\n    }\r\n    return projectRows.reverse(); //reversed so that incomplete row will be on top, if projects.length % (numberOfItemsInRow) !== 0\r\n  }\r\n\r\n  render(){\r\n    if(this.state.rows){\r\n      return(\r\n        <Col\r\n          xl={{ size: 12, offset: 0 }}\r\n          lg={{ size: 12, offset: 0 }}\r\n          md={{ size: 12, offset: 0 }}\r\n          sm={{ size: 12, offset: 0 }}\r\n          xs={{ size: 12, offset: 0 }}\r\n          className={\"projects-grid\"}\r\n        >\r\n          <div className={\"grid-filter\"} style={{\"minHeight\": `${this.state.rows.length*16}vh`}}></div>\r\n          {this.state.rows}\r\n        </Col>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody} from 'reactstrap';\r\n\r\n\r\nexport class MobileProjectModal extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      activeKey: this.props.activeKey,\r\n      card: null,\r\n      closeModal: this.props.closeModal,\r\n      visible: this.props.visible\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeKey: this.props.activeKey,\r\n      visible: this.props.visible,\r\n      card: null,\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.visible !== this.props.visible){\r\n      this.setState({\r\n        visible: this.props.visible\r\n      })\r\n    }\r\n    if(this.props.card !== undefined && this.state.title !== this.props.card.title){\r\n      this.setState({\r\n        activeKey:  this.props.activeKey,\r\n        tags: this.props.card.tags[0],\r\n        title: this.props.card.title,\r\n        text: this.props.card.text,\r\n        date: this.props.card.date,\r\n        links: this.props.card.links[0].id\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Modal isOpen={this.state.visible}  className=\"project-modal\" id=\"projectModal\">\r\n      <Button\r\n        className=\"project-modal-close-button\"\r\n        close aria-label=\"Cancel\"\r\n        size=\"lg\"\r\n        onClick={this.state.closeModal}\r\n      />\r\n        <ModalHeader className=\"project-modal-header\">{this.state.title}</ModalHeader>\r\n          <ModalBody >\r\n            <p className=\"project-date\">{this.state.date}</p>\r\n            <div>{this.state.tags}</div>\r\n            <p>{this.state.text}</p>\r\n            <div>{this.state.links}</div>\r\n          </ModalBody>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport portfolio from '../portfolio.json';\r\n\r\nimport { MobileProjectsGrid } from './Grid/MobileProjectsGrid';\r\nimport { MobileProjectModal } from './Grid/MobileProjectModal';\r\n\r\nexport class MobilePortfolio extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      projectKeys: Object.keys(portfolio),\r\n      card: null,\r\n      projects: portfolio\r\n    };\r\n    this.toggleActiveKey = this.toggleActiveKey.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeKey: null\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.props.card === null){\r\n      this.setState({\r\n        card: null\r\n      })\r\n    }\r\n  }\r\n\r\n  toggleActiveKey(key){\r\n    if(this.state.activeKey === key){                //if the key value passed from the button is equal to\r\n      this.setState({ activeKey: null, card: null }) // Portfolio.state.activeKey, resets activeKey and state.card to null\r\n    } else {\r\n      this.setState({   //if Portfolio.state.activeKey === null, sets Portfolio.state.activeKey and sets Portfolio.state.card object values from the values\r\n        activeKey: key, //found in Portfolio.state.projects\r\n        card: {\r\n          date: this.state.projects[key].date,\r\n          links: this.state.projects[key].links,\r\n          tags: this.state.projects[key].tags,\r\n          title: this.state.projects[key].content.header,\r\n          text: this.state.projects[key].content.text\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  closeModal(){\r\n    this.setState({\r\n      activeKey: null,\r\n      card: null\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Row>\r\n        {this.state.card !== undefined && this.state.card !== null\r\n          ? <MobileProjectModal\r\n              visible={this.state.card !== null && this.state.card !== undefined}\r\n              card={this.state.card !== null && this.state.card !== undefined ? this.state.card : null}\r\n              closeModal={this.closeModal}\r\n            />\r\n          : null\r\n        }\r\n        <MobileProjectsGrid\r\n          className={\"projects-grid\"}\r\n          items={this.state.projectKeys}\r\n          activeKey={this.state.activeKey}\r\n          card={null}\r\n          toggleActiveKey={this.toggleActiveKey}\r\n        />\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button, Col, Row } from 'reactstrap';\r\n\r\nexport class ContactContent extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      toggleModal: this.props.toggleModal\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Col\r\n        xl={{ size: 10, offset: 1 }}\r\n        lg={{ size: 10, offset: 1 }}\r\n        md={{ size: 10, offset: 1 }}\r\n        sm={{ size: 10, offset: 1 }}\r\n        xs={{ size: 10, offset: 1 }}\r\n        className={\"container\"}\r\n      >\r\n        <Row className={\"header\"}>\r\n          <p>Get In Touch</p>\r\n        </Row>\r\n\r\n        <Row className={\"content\"}>\r\n          <Col\r\n            xl={{ size: 6, offset: 1 }}\r\n            lg={{ size: 6, offset: 1 }}\r\n            md={{ size: 6, offset: 1 }}\r\n            sm={{ size: 6, offset: 1 }}\r\n            xs={{ size: 10, offset: 1 }}\r\n            className={\"left\"}\r\n          >\r\n            <p>Email - taymosier@gmail.com</p>\r\n            <p>GitHub -  github.com/taymosier</p>\r\n            <p>LinkedIn - www.linkedin.com/in/taylormosier</p>\r\n            <p>Raleigh-Durham, NC</p>\r\n          </Col>\r\n          <Col\r\n            xl={{ size: 4, offset: 1 }}\r\n            lg={{ size: 4, offset: 1 }}\r\n            md={{ size: 4, offset: 1 }}\r\n            sm={{ size: 4, offset: 1 }}\r\n            xs={{ size: 10, offset: 1 }}\r\n            className={\"right\"}\r\n          >\r\n            <p className=\"blob\">\r\n              Have an idea for an app or want to discuss a full-time, part-time, or freelance opportunity?\r\n            </p>\r\n            <Button\r\n              onClick={this.state.toggleModal}\r\n              className=\"contact-modal-button\"\r\n            >\r\n              Contact Me\r\n            </Button>\r\n          </Col >\r\n        </Row>\r\n      </Col>\r\n    );\r\n}}\r\n","import React, { Component } from 'react';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\n\r\nexport class ContactFormGroup extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      name: this.props.field.name,\r\n      value: this.props.field.value,\r\n      type: this.props.field.type,\r\n      hasLabel: this.props.field.hasLabel,\r\n      label: this.props.field.label,\r\n      placeholder: this.props.field.placeholder !== undefined ? this.props.field.placeholder : null\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <FormGroup>\r\n        {this.state.hasLabel !== undefined && this.state.hasLabel\r\n          ? <Label for={this.state.name}>{this.state.label}</Label>\r\n          : null\r\n        }\r\n        <Input\r\n          name={this.state.name}\r\n          value={this.state.value}\r\n          type={this.state.type}\r\n          onChange={this.props.onChange}\r\n          placeholder={this.state.placeholder !== null ? this.state.placeholder : null}\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button, Col, Form, Modal, ModalHeader, ModalBody} from 'reactstrap';\r\n\r\nimport { ContactFormGroup } from './ContactFormGroup';\r\n\r\nexport class ContactModal extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isOpen: this.props.visible,\r\n      toggle: this.props.toggleModal,\r\n      formFields: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        toggleContactForm: this.props.toggleContactForm\r\n      }\r\n    }\r\n    this.onFieldChange = this.onFieldChange.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.isOpen !== this.props.visible){\r\n      this.setState({\r\n        isOpen: this.props.visible\r\n      })\r\n    }\r\n  }\r\n\r\n  onFieldChange(e){\r\n    e.preventDefault();\r\n    let newForm = this.state.formFields;\r\n    newForm[`${e.target.name}`] = e.target.value\r\n    console.log(e.target.name);\r\n    this.setState({\r\n      formFields: newForm\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n        <Modal isOpen={this.state.isOpen} toggle={this.state.toggleContactForm} className=\"contact-form\" id=\"contactForm\">\r\n          <div className={\"contact-form-filter\"} />\r\n          <Button className=\"contact-form-close-button\" onClick={this.state.toggle} close aria-label=\"Cancel\" size=\"lg\"/>\r\n          <ModalHeader toggle={this.state.toggleContactForm} className=\"contact-form-header\">Start The Conversation!</ModalHeader>\r\n          <ModalBody >\r\n            <Form className=\"contact-form-fields-container\" action=\"https://formspree.io/taymosier@gmail.com\" method=\"POST\">\r\n              <Col\r\n              className=\"contact-form-col\"\r\n                xl={{ size: 10, offset: 1 }}\r\n                lg={{ size: 10, offset: 1 }}\r\n                md={{ size: 12, offset: 0 }}\r\n                sm={{ size: 12, offset: 0 }} \r\n                xs={{ size: 12, offset: 0 }}\r\n              >\r\n                <ContactFormGroup\r\n                  onChange={this.onFieldChange}\r\n                  field={\r\n                    {\r\n                      name: \"firstName\",\r\n                      type: \"text\",\r\n                      hasLabel: false,\r\n                      label: \"\",\r\n                      placeholder: \"First Name\"\r\n                    }\r\n                  }\r\n                />\r\n                <ContactFormGroup\r\n                  onChange={this.onFieldChange}\r\n                  field={\r\n                    {\r\n                      name: \"lastName\",\r\n                      type: \"text\",\r\n                      hasLabel: false,\r\n                      placeholder: \"Last Name\",\r\n                      label: \"\"\r\n                    }\r\n                  }\r\n                />\r\n                <ContactFormGroup\r\n                  onChange={this.onFieldChange}\r\n                  field={\r\n                    {\r\n                      name: \"email\",\r\n                      type: \"email\",\r\n                      hasLabel: false,\r\n                      placeholder: \"Email\",\r\n                      label: \"\"\r\n                    }\r\n                  }\r\n                />\r\n                <ContactFormGroup\r\n                  onChange={this.onFieldChange}\r\n                  field={\r\n                    {\r\n                      name: \"phone\",\r\n                      type: \"number\",\r\n                      hasLabel: false,\r\n                      placeholder: \"Phone Number\",\r\n                      label: \"\"\r\n                    }\r\n                  }\r\n                />\r\n                <ContactFormGroup\r\n                  onChange={this.onFieldChange}\r\n                  field={\r\n                    {\r\n                      name: \"message\",\r\n                      type: \"textarea\",\r\n                      hasLabel: false,\r\n                      placeholder: \"Write Your Message Here\",\r\n                      label: \"\"\r\n                    }\r\n                  }\r\n                />\r\n              </Col>\r\n            </Form>\r\n            <Button type=\"submit\" value=\"Send\" id=\"contactFormSubmitButton\">Submit</Button>\r\n          </ModalBody>\r\n        </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { ContactContent } from './ContactContent';\r\nimport  { ContactModal } from './ContactModal';\r\n\r\n\r\nexport class ContactView extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modal: false\r\n    }\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n  }\r\n\r\n  componentDidUpdate(){\r\n\r\n  }\r\n\r\n  toggleModal(){\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Row className={\"contact-view\"}>\r\n        <div className={\"contact-filter\"}/>\r\n        <ContactModal\r\n          visible={this.state.modal}\r\n          toggleModal={this.toggleModal}\r\n        />\r\n        <ContactContent toggleModal={this.toggleModal}/>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { DefaultView } from './Views/DefaultView';\r\nimport { AboutMe } from './Views/AboutMe/AboutMe.jsx';\r\nimport { MobileAboutMe } from './Views/AboutMe/Mobile/MobileAboutMe.jsx';\r\nimport { SkillView } from './Views/Skillset/SkillView.jsx';\r\nimport { MobileSkillView } from './Views/Skillset/Mobile/MobileSkillView.jsx';\r\nimport { Portfolio } from './Views/Portfolio/Portfolio.jsx';\r\nimport { MobilePortfolio } from './Views/Portfolio/Mobile/MobilePortfolio.jsx';\r\nimport { ContactView} from './Views/Contact/ContactView';\r\n\r\nexport class Portal extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      activeView: this.props.activeView,\r\n      setActiveView: this.props.setActiveView\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeView !== this.props.activeView){\r\n      this.setState({\r\n        activeView: this.props.activeView\r\n      });\r\n    }\r\n    if(this.state.screenSize !== this.props.screenSize){\r\n      this.setState({\r\n        screenSize: this.props.screenSize\r\n      });\r\n    }\r\n  }\r\n\r\n  render(){\r\n    if(this.props.activeView){\r\n      switch(`${this.props.activeView}`){\r\n        case \"DefaultView\":\r\n          return <DefaultView setActiveView={this.state.setActiveView}/>;\r\n        case \"AboutMeView\":\r\n          if(this.props.screenSize === \"medium\" || this.props.screenSize === \"small\" || this.props.screenSize === \"xsmall\"){\r\n            return <MobileAboutMe />\r\n          }\r\n          return <AboutMe />;\r\n        case \"SkillView\":\r\n          if(this.props.screenSize === \"medium\" || this.props.screenSize === \"small\" || this.props.screenSize === \"xsmall\"){\r\n            return <MobileSkillView />\r\n          }\r\n          return <SkillView />\r\n        case \"PortfolioView\":\r\n          if(this.props.screenSize === \"medium\" || this.props.screenSize === \"small\" || this.props.screenSize === \"xsmall\"){\r\n            return <MobilePortfolio />\r\n          }\r\n          return <Portfolio />\r\n        case \"ContactView\":\r\n          return <ContactView />\r\n        default:\r\n          return <div>Something broke</div>\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPortal.propTypes = {\r\n  activeView: PropTypes.string.isRequired\r\n}\r\n","import React, { Component } from 'react';\nimport {Container } from 'reactstrap';\nimport './index.css';\n\nimport { Portal } from './Portal';\n\nconst helpers = require('./helpers.js');\n\n//TODO\n// Prepend class names of about me main right column with \"about\"\n// add skill logos to button/objects\n// Home: mobile styling\n// About Me: add content / style mobile\n// *** Skills: add content to skill objects\n// Portfolio: style modal elements / create generateLinkButtons function / add content\n// Contact: replace github and linkedin text with icons\n\nclass App extends Component {\n  // MAKE SURE YOU PASS PROPS IF YOU LOAD FROM SERVER.....dumbass...\n  constructor(){\n    super()\n    this.state = {\n      activeView: \"DefaultView\",\n      isHome: true,\n      classes: \"App\",\n      filter: \"body-filter filter-on\",\n      pulse: \"pulse\",\n      screenSize: helpers.determineScreenSize()\n    }\n    this.setActiveView = this.setActiveView.bind(this);\n    this.checkSize = this.checkSize.bind(this);\n  }\n\n\n  setActiveView(view){\n    let isHome = (view === \"DefaultView\")\n    let classes, pulse, filter;\n\n    if(isHome){\n      classes = `App transition`;\n      filter = \"body-filter filter-on\";\n      pulse = \"pulse\"\n    } else {\n      classes=\"App\";\n      filter = \"body-filter\";\n      pulse = \"\"\n    }\n    this.setState({\n      activeView: `${view}`,\n      isHome: isHome,\n      classes: classes,\n      filter: filter,\n      pulse: pulse\n    });\n  }\n\n  checkSize(){\n    console.log(\"resize\")\n    let screenSize = helpers.determineScreenSize();\n    if(screenSize !== this.state.screenSize){\n      this.setState({\n        screenSize: screenSize\n      })\n    }\n  }\n\n  componentDidMount(){\n    window.onresize = this.checkSize;\n  }\n\n  componentDidUpdate(){\n\n  }\n\n  render() {\n    return (\n      <Container className={this.state.classes}>\n        <div className={this.state.filter}/>\n        <div className={`header-container`} onClick={()=>{this.setActiveView(\"DefaultView\")}}>\n          <header className={`App-header ${this.state.pulse}`}>\n          taylor mosier\n          </header>\n        </div>\n\n        <Portal\n          screenSize={this.state.screenSize}\n          activeView={this.state.activeView}\n          setActiveView={this.setActiveView}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport './keyframes.css';\nimport './mobile.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}